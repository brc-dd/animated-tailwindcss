diff --git a/dist/client/app/router.js b/dist/client/app/router.js
index 58d82bdd05eed35f7a44988f17c4736c4da0bcc7..4407a6eeefcfca9a9282c474c63fdd3ec45d89a4 100644
--- a/dist/client/app/router.js
+++ b/dist/client/app/router.js
@@ -16,12 +16,6 @@ const getDefaultRoute = () => ({
 export function createRouter(loadPageModule, fallbackComponent) {
     const route = reactive(getDefaultRoute());
     function go(href = inBrowser ? location.href : '/') {
-        // ensure correct deep link so page refresh lands on correct files.
-        const url = new URL(href, fakeHost);
-        if (!url.pathname.endsWith('/') && !url.pathname.endsWith('.html')) {
-            url.pathname += '.html';
-            href = url.pathname + url.search + url.hash;
-        }
         if (inBrowser) {
             // save scroll position before changing url
             history.replaceState({ scrollPosition: window.scrollY }, document.title);
@@ -79,6 +73,15 @@ export function createRouter(loadPageModule, fallbackComponent) {
                 latestPendingPath = null;
                 route.path = pendingPath;
                 route.component = fallbackComponent ? markRaw(fallbackComponent) : null;
+                // reset page data
+                route.data = {
+                    relativePath: '',
+                    title: '404',
+                    description: 'Not Found',
+                    headers: [],
+                    frontmatter: {},
+                    lastUpdated: 0
+                };
             }
         }
     }
diff --git a/dist/client/app/utils.js b/dist/client/app/utils.js
index 0411dde2de1581dd50e779dc82093268a103a3d9..047102a11fbd7f5b05b2fdf189221888f9bd16d1 100644
--- a/dist/client/app/utils.js
+++ b/dist/client/app/utils.js
@@ -31,7 +31,8 @@ export function pathToFile(path) {
         // /foo/bar.html -> ./foo_bar.md
         if (inBrowser) {
             const base = import.meta.env.BASE_URL;
-            pagePath = pagePath.slice(base.length).replace(/\//g, '_') + '.md';
+            pagePath =
+                (pagePath.slice(base.length).replace(/\//g, '_') || 'index') + '.md';
             // client production build needs to account for page hash, which is
             // injected directly in the page's html
             const pageHash = __VP_HASH_MAP__[pagePath.toLowerCase()];
diff --git a/dist/client/theme-default/components/LastUpdated.vue b/dist/client/theme-default/components/LastUpdated.vue
index ab888fbc222e5dba6b60fcab08972fe29c61b5fc..3191ab05e0c0a9d5882f07c4ad20d46b87333eae 100644
--- a/dist/client/theme-default/components/LastUpdated.vue
+++ b/dist/client/theme-default/components/LastUpdated.vue
@@ -7,7 +7,7 @@ const { theme, page } = useData()
 const hasLastUpdated = computed(() => {
   const lu = theme.value.lastUpdated

-  return lu !== undefined && lu !== false
+  return lu !== undefined && lu !== false && page.value.lastUpdated !== 0
 })

 const prefix = computed(() => {
diff --git a/dist/client/theme-default/components/NavBarTitle.vue b/dist/client/theme-default/components/NavBarTitle.vue
index 8b9d3709763ad0e16a8a4d88bfc874767509bbb7..686a685ad041cb01e04aacbe88c9e3dfe46aa18f 100644
--- a/dist/client/theme-default/components/NavBarTitle.vue
+++ b/dist/client/theme-default/components/NavBarTitle.vue
@@ -6,7 +6,7 @@ const { site, theme, localePath } = useData()
 <template>
   <a
     class="nav-bar-title"
-    :href="localePath"
+    :href="localePath.replace(/\/$/, '')"
     :aria-label="`${site.title}, back to home`"
   >
     <img
diff --git a/dist/client/theme-default/components/SideBarLink.js b/dist/client/theme-default/components/SideBarLink.js
index 68b31d7122382a7b8dbf6c1fb1ce340b80342613..4348bc10aee212c11cd4aec7c37ac99276ae6846 100644
--- a/dist/client/theme-default/components/SideBarLink.js
+++ b/dist/client/theme-default/components/SideBarLink.js
@@ -5,7 +5,9 @@ export const SideBarLink = (props) => {
     const route = useRoute();
     const { site, frontmatter } = useData();
     const depth = props.depth || 1;
-    const maxDepth = frontmatter.value.sidebarDepth || Infinity;
+    const maxDepth = frontmatter.value.sidebarDepth ||
+        site.value.themeConfig.sidebarDepth ||
+        Infinity;
     const headers = route.data.headers;
     const text = props.item.text;
     const link = resolveLink(site.value.base, props.item.link);
diff --git a/dist/client/theme-default/composables/sideBar.js b/dist/client/theme-default/composables/sideBar.js
index df72937df2407e8405f940735f5bc21611956da0..c52fbd84870ab094343a01e864f1f090af50bbc2 100644
--- a/dist/client/theme-default/composables/sideBar.js
+++ b/dist/client/theme-default/composables/sideBar.js
@@ -10,7 +10,7 @@ export function useSideBar() {
         // at first, we'll check if we can find the sidebar setting in frontmatter.
         const headers = route.data.headers;
         const frontSidebar = route.data.frontmatter.sidebar;
-        const sidebarDepth = route.data.frontmatter.sidebarDepth;
+        const sidebarDepth = route.data.frontmatter.sidebarDepth || site.value.themeConfig.sidebarDepth;
         // if it's `false`, we'll just return an empty array here.
         if (frontSidebar === false) {
             return [];
diff --git a/dist/node/index.d.ts b/dist/node/index.d.ts
index 9605e5ba9dc2dc4bb822c31fcb07d9cdb2ff9882..51865ef134c92ca70874e6af53f4ddeea01ec8ac 100644
--- a/dist/node/index.d.ts
+++ b/dist/node/index.d.ts
@@ -20,6 +20,7 @@ export declare namespace DefaultTheme {
         logo?: string
         nav?: NavItem[] | false
         sidebar?: SideBarConfig | MultiSideBarConfig
+        sidebarDepth?: number

         /**
          * GitHub repository following the format <user>/<project>.
diff --git a/dist/node/serve-9874c5ac.js b/dist/node/serve-9874c5ac.js
index e024d9eb80502d794ad7e6c078b499770d701a55..f8ac9259cea2ac35a038dd7e75d7e8db93240d35 100644
--- a/dist/node/serve-9874c5ac.js
+++ b/dist/node/serve-9874c5ac.js
@@ -35127,12 +35127,7 @@ const linkPlugin = (md, externalAttrs) => {
       url = path + hash;
     } else {
       let cleanUrl = url.replace(/\#.*$/, "").replace(/\?.*$/, "");
-      if (cleanUrl.endsWith(".md")) {
-        cleanUrl = cleanUrl.replace(/\.md$/, ".html");
-      }
-      if (!cleanUrl.endsWith(".html") && !cleanUrl.endsWith("/")) {
-        cleanUrl += ".html";
-      }
+      cleanUrl = cleanUrl.replace(/\.md$/, "");
       const parsed = new url$1.URL(url, "http://a.com");
       url = cleanUrl + parsed.search + parsed.hash;
     }
diff --git a/types/default-theme.d.ts b/types/default-theme.d.ts
index d72848717e1980bc9ac78c94b4262868b19593b3..f4071a7bf9069272050117b4f2c647a1f83ecb28 100644
--- a/types/default-theme.d.ts
+++ b/types/default-theme.d.ts
@@ -3,6 +3,7 @@ export namespace DefaultTheme {
     logo?: string
     nav?: NavItem[] | false
     sidebar?: SideBarConfig | MultiSideBarConfig
+    sidebarDepth?: number

     /**
      * GitHub repository following the format <user>/<project>.

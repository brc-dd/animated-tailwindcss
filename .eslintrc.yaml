root: true
env:
  node: true
extends:
  - plugin:eslint-comments/recommended
  - plugin:import/recommended
  - plugin:import/typescript
  - plugin:security/recommended
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
  - airbnb-base
  - airbnb-typescript/base
  - plugin:prettier/recommended
ignorePatterns:
  - dist
  - '!.vitepress'
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaVersion: 2019
  project:
    - tsconfig.json
    - site/tsconfig.json
  sourceType: module
plugins:
  - '@typescript-eslint'
  - security
settings:
  import/resolver:
    typescript:
      alwaysTryTypes: true
      project: .
rules:
  eslint-comments/no-unused-disable: error
  security/detect-object-injection: off # ts handles this
  import/no-extraneous-dependencies:
    - error
    - devDependencies: true
  import/prefer-default-export: off
  '@typescript-eslint/array-type':
    - error
    - default: generic
  '@typescript-eslint/ban-tslint-comment': error
  '@typescript-eslint/class-literal-property-style': error
  '@typescript-eslint/consistent-indexed-object-style': error
  '@typescript-eslint/consistent-type-assertions': error
  '@typescript-eslint/consistent-type-definitions':
    - error
    - type
  '@typescript-eslint/consistent-type-exports': error
  '@typescript-eslint/consistent-type-imports':
    - error
    - disallowTypeAnnotations: false
  '@typescript-eslint/explicit-function-return-type': error
  '@typescript-eslint/explicit-member-accessibility': error
  '@typescript-eslint/explicit-module-boundary-types': error
  '@typescript-eslint/member-ordering': error
  '@typescript-eslint/method-signature-style': error
  '@typescript-eslint/naming-convention': error
  '@typescript-eslint/no-base-to-string': error
  '@typescript-eslint/no-confusing-non-null-assertion': error
  '@typescript-eslint/no-confusing-void-expression': error
  '@typescript-eslint/no-dynamic-delete': error
  '@typescript-eslint/no-extraneous-class': error
  '@typescript-eslint/no-invalid-void-type': error
  '@typescript-eslint/no-meaningless-void-operator': error
  '@typescript-eslint/no-non-null-asserted-nullish-coalescing': error
  '@typescript-eslint/no-parameter-properties': error
  '@typescript-eslint/no-require-imports': error
  '@typescript-eslint/no-unnecessary-boolean-literal-compare': error
  '@typescript-eslint/no-unnecessary-condition': error
  '@typescript-eslint/no-unnecessary-qualifier': error
  '@typescript-eslint/no-unnecessary-type-arguments': error
  '@typescript-eslint/non-nullable-type-assertion-style': error
  '@typescript-eslint/prefer-enum-initializers': error
  '@typescript-eslint/prefer-for-of': error
  '@typescript-eslint/prefer-function-type': error
  '@typescript-eslint/prefer-includes': error
  '@typescript-eslint/prefer-literal-enum-member': error
  '@typescript-eslint/prefer-nullish-coalescing': error
  '@typescript-eslint/prefer-optional-chain': error
  '@typescript-eslint/prefer-readonly': error
  '@typescript-eslint/prefer-reduce-type-parameter': error
  '@typescript-eslint/prefer-regexp-exec': error
  '@typescript-eslint/prefer-return-this-type': error
  '@typescript-eslint/prefer-string-starts-ends-with': error
  '@typescript-eslint/prefer-ts-expect-error': error
  '@typescript-eslint/promise-function-async': error
  '@typescript-eslint/require-array-sort-compare':
    - error
    - ignoreStringArrays: true
  '@typescript-eslint/sort-type-union-intersection-members': error
  '@typescript-eslint/strict-boolean-expressions': error
  '@typescript-eslint/switch-exhaustiveness-check': error
  '@typescript-eslint/type-annotation-spacing': error
  '@typescript-eslint/typedef': error
  '@typescript-eslint/unified-signatures': error

  #  Override/Extension Rules
  brace-style: off
  '@typescript-eslint/brace-style': error
  comma-dangle: off
  '@typescript-eslint/comma-dangle': error
  comma-spacing: off
  '@typescript-eslint/comma-spacing': error
  default-param-last: off
  '@typescript-eslint/default-param-last': error
  dot-notation: off
  '@typescript-eslint/dot-notation': error
  func-call-spacing: off
  '@typescript-eslint/func-call-spacing': error
  init-declarations: off
  '@typescript-eslint/init-declarations': error
  keyword-spacing: off
  '@typescript-eslint/keyword-spacing': error
  lines-between-class-members: off
  '@typescript-eslint/lines-between-class-members': error
  no-dupe-class-members: off
  '@typescript-eslint/no-dupe-class-members': error
  no-duplicate-imports: off
  '@typescript-eslint/no-duplicate-imports': error
  no-extra-parens: off
  '@typescript-eslint/no-extra-parens': error
  no-invalid-this: off
  '@typescript-eslint/no-invalid-this': error
  no-loop-func: off
  '@typescript-eslint/no-loop-func': error
  no-redeclare: off
  '@typescript-eslint/no-redeclare': error
  no-restricted-imports: off
  '@typescript-eslint/no-restricted-imports': error
  no-shadow: off
  '@typescript-eslint/no-shadow': error
  no-throw-literal: off
  '@typescript-eslint/no-throw-literal': error
  no-unused-expressions: off
  '@typescript-eslint/no-unused-expressions': error
  no-use-before-define: off
  '@typescript-eslint/no-use-before-define': error
  no-useless-constructor: off
  '@typescript-eslint/no-useless-constructor': error
  object-curly-spacing: off
  '@typescript-eslint/object-curly-spacing': error
  padding-line-between-statements: off
  '@typescript-eslint/padding-line-between-statements': error
  quotes: off
  '@typescript-eslint/quotes': error
  no-return-await: off
  '@typescript-eslint/return-await': error
  semi: off
  space-before-function-paren: off
  '@typescript-eslint/space-before-function-paren': error
  space-infix-ops: off
  '@typescript-eslint/space-infix-ops': error
